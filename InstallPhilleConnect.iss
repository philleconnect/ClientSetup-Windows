; Script generated by the Inno Script Studio Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "PhilleConnect"
#define MyAppVersion "1.3"
#define MyAppPublisher "Johannes Kreutz and Dirk Winkel"
#define MyAppURL "https://www.philleconnect.org/"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{0F9E17C0-9CBF-410F-9949-CAC7B6AFF494}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={pf}\{#MyAppName}
DisableDirPage=yes                      
DefaultGroupName={#MyAppName}                                               
DisableProgramGroupPage=yes
OutputDir=Installer
OutputBaseFilename=PhilleConnectSetup
Compression=lzma
SolidCompression=True
AllowCancelDuringInstall=False
ShowLanguageDialog=no
Uninstallable=no
ArchitecturesInstallIn64BitMode=x64
ArchitecturesAllowed=x64
MinVersion=0,6.1.7601
PrivilegesRequired=admin

[Languages]
Name: "german"; MessagesFile: "compiler:Languages\German.isl"

[Components]
Name: "student"; Description: "Installation für Schülerrechner"; Types: full; \
  Flags: exclusive
Name: "teacher"; Description: "Installation für Lehrerrechner im Rechnerraum"; \
  Types: custom; Flags: exclusive
 Name: "smallTeacher"; Description: "Installation für Einzel-Lehrerrechner"; \
  Types: custom; Flags: exclusive

[Tasks]
Name: "desktopicon"; Description: "Desktopverknüpfung erstellen"; \
  GroupDescription: "Icons"
Name: "startmenuicon"; Description: "Startmenüeintrag erstellen"; \
  GroupDescription: "Icons"

[Files]
Source: "PhilleConnectExecutables\*"; \
  DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "PhilleConnectDesktop\*"; \
  DestDir: "{tmp}"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "PhilleConnectStudent\*"; \
  DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs; \
  Components: student
Source: "PhilleConnectTeacher\*"; \
  DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs; \
  Components: teacher
Source: "PhilleConnectSmallTeacherStudent\*"; \
  DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs; \
  Components: student smallTeacher
Source: "InstallerLocation\*"; \
  DestDir: "{src}"; Flags: ignoreversion recursesubdirs createallsubdirs \
   deleteafterinstall
Source: "Scripts\*"; \
  DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs \
   deleteafterinstall

[Registry]
Root: "HKLM"; \
  Subkey: "Software\Microsoft\Windows\CurrentVersion\Run"; \
  ValueType: string; \
  ValueName: "PhilleConnectDrive"; \
  ValueData: "C:\Program Files\PhilleConnect\PhilleConnectDrive.exe"; \
  Flags: createvalueifdoesntexist; \
  Components: student smallTeacher

Root: "HKLM"; \
  Subkey: "Software\Microsoft\Windows\CurrentVersion\Run"; \
  ValueType: string; \
  ValueName: "PhilleConnectTeacher"; \
  ValueData: "C:\Program Files\PhilleConnect\PhilleConnectTeacher.exe"; \
  Flags: createvalueifdoesntexist; \
  Components: teacher

Root: "HKLM"; \
  Subkey: "Software\Microsoft\Windows\CurrentVersion\Policies\System"; \
  ValueType: dword; \
  ValueName: "DelayedDesktopSwitchTimeout"; \
  ValueData: "3"; \
  Flags: createvalueifdoesntexist

Root: "HKLM"; \
  Subkey: "Software\Microsoft\Windows\CurrentVersion\Policies\System"; \
  ValueType: dword; \
  ValueName: "RunLogonScriptSync"; \
  ValueData: "1"; \
  Flags: createvalueifdoesntexist

[Run]
Filename: "{app}\createSystemclientTask.bat"; \
    Flags: runascurrentuser
Filename: "{src}\copyConfigFile.bat"
Filename: "{app}\gpedit.bat"; \
    Flags: runascurrentuser
Filename: "{app}\setupFirewall.bat"; \
    Flags: runascurrentuser; \
    Components: student
Filename: "{tmp}\ClientRegistrationTool.exe"; \
    Flags: nowait postinstall skipifsilent; \
    Description: "Client registrieren und neu starten"
Filename: "{app}\reboot.bat"; \
    Flags: nowait postinstall unchecked; \
    Description: "Client bereits registriert, jetzt neu starten"

[Icons]
Name: "{group}\PhilleConnect Drive"; \
  Filename: "{app}\PhilleConnectDrive.exe"; WorkingDir: "{app}"; \
  Comment: "Mit Home-Laufwerk verbinden..."; Tasks: startmenuicon; \
  Components: student smallTeacher
Name: "{commondesktop}\PhilleConnect Drive"; \
  Filename: "{app}\PhilleConnectDrive.exe"; WorkingDir: "{app}"; \
  Comment: "Mit Home-Laufwerk verbinden..."; Tasks: desktopicon; \
  Components: student smallTeacher

Name: "{group}\PhilleConnect Teacher"; \
  Filename: "{app}\PhilleConnectTeacher.exe"; WorkingDir: "{app}"; \
  Comment: "Mit Home-Laufwerk verbinden..."; Tasks: startmenuicon; \
  Components: teacher
Name: "{commondesktop}\PhilleConnect Teacher"; \
  Filename: "{app}\PhilleConnectTeacher.exe"; WorkingDir: "{app}"; \
  Comment: "Mit Home-Laufwerk verbinden..."; Tasks: desktopicon; \
  Components: teacher

[Code]
var
  RunListLastChecked: Integer;

procedure RunListClickCheck(Sender: TObject);
var
  I: Integer;
  Checked: Integer;
begin
  { Find if some other checkbox got checked }
  Checked := -1;
  for I := 0 to WizardForm.RunList.Items.Count - 1 do
  begin
    if WizardForm.RunList.Checked[I] and (I <> RunListLastChecked) then
    begin
      Checked := I;
    end;
  end;

  { If it was, uncheck the previously checked box and remember the new one }
  if Checked >= 0 then
  begin
    if RunListLastChecked >= 0 then
    begin
      WizardForm.RunList.Checked[RunListLastChecked] := False;
    end;

    RunListLastChecked := Checked;
  end;

  { Or if the previously checked box got unchecked, forget it. }
  { (This is not really necessary, it's just to clean the things up) }
  if (RunListLastChecked >= 0) and
     (not WizardForm.RunList.Checked[RunListLastChecked]) then
  begin
    RunListLastChecked := -1;
  end;
end;

procedure InitializeWizard();
begin
  WizardForm.RunList.OnClickCheck := @RunListClickCheck;
  RunListLastChecked := 0;
end;